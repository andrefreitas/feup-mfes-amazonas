class Piece
	types
		public Position :: x : nat
												y : nat
		inv p == p.x >= 0 and p.x < 10 and p.y >= 0 and p.y <= 10;			
	values

	instance variables
		private position : Position;
	operations
		public Piece : nat * nat ==> Piece
			Piece(x,y) == (position := mk_Position(x,y));
		public setX : nat ==> ()
			setX(x) == (position.x := x);
		public setY : nat ==> ()
			setY(y) == (position.y := y);
		public getX : () ==> nat
			getX() == (return position.x);
		public getY : () ==> nat
			getY() == (return position.y);
		
	functions
	-- TODO Define functiones here
	traces
	-- TODO Define Combinatorial Test Traces here
end Piece