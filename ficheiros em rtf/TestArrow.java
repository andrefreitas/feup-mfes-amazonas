//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2013-12-02 by the VDM++ to JAVA Code Generator
// (v9.0.2 - Thu 14-Mar-2013 12:36:47 +0900)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// This file was genereted from "C:\\Users\\Ana Gomes\\Documents\\git\\mfes-amazonas\\ficheiros em rtf\\TestArrow.rtf".

// ***** VDMTOOLS START Name=package KEEP=NO
// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=NO
import jp.vdmtools.VDM.UTIL;
import jp.vdmtools.VDM.Sentinel;
import jp.vdmtools.VDM.EvaluatePP;
import jp.vdmtools.VDM.CGException;
// ***** VDMTOOLS END Name=imports



public class TestArrow implements EvaluatePP {

// ***** VDMTOOLS START Name=sentinel KEEP=NO
  volatile Sentinel sentinel;
// ***** VDMTOOLS END Name=sentinel


// ***** VDMTOOLS START Name=TestArrowSentinel KEEP=NO
  class TestArrowSentinel extends Sentinel {

    public final int AssertTrue = 0;

    public final int TestArrowMethods = 1;

    public final int nr_functions = 2;


    public TestArrowSentinel () throws CGException {}


    public TestArrowSentinel (EvaluatePP instance) throws CGException {
      init(nr_functions, instance);
    }

  }
// ***** VDMTOOLS END Name=TestArrowSentinel
;

// ***** VDMTOOLS START Name=evaluatePP#1|int KEEP=NO
  public Boolean evaluatePP (int fnr) throws CGException {
    return Boolean.TRUE;
  }
// ***** VDMTOOLS END Name=evaluatePP#1|int


// ***** VDMTOOLS START Name=setSentinel KEEP=NO
  public void setSentinel () {
    try {
      sentinel = new TestArrowSentinel(this);
    }
    catch (Exception e) {
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=setSentinel


// ***** VDMTOOLS START Name=vdm_init_TestArrow KEEP=NO
  private void vdm_init_TestArrow () {
    try {
      setSentinel();
    }
    catch (Exception e) {
      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=vdm_init_TestArrow


// ***** VDMTOOLS START Name=TestArrow KEEP=NO
  public TestArrow () throws CGException {
    vdm_init_TestArrow();
  }
// ***** VDMTOOLS END Name=TestArrow


// ***** VDMTOOLS START Name=AssertTrue#1|Boolean KEEP=NO
  public void AssertTrue (final Boolean a) throws CGException {
    sentinel.entering(((TestArrowSentinel)sentinel).AssertTrue);
    try {
      if (!this.pre_AssertTrue(a).booleanValue()) 
        UTIL.RunTime("Precondition failure in AssertTrue");
      return;
    }
    finally {
      sentinel.leaving(((TestArrowSentinel)sentinel).AssertTrue);
    }
  }
// ***** VDMTOOLS END Name=AssertTrue#1|Boolean


// ***** VDMTOOLS START Name=pre_AssertTrue#1|Boolean KEEP=NO
  public Boolean pre_AssertTrue (final Boolean a) throws CGException {
    return a;
  }
// ***** VDMTOOLS END Name=pre_AssertTrue#1|Boolean


// ***** VDMTOOLS START Name=TestArrowMethods KEEP=NO
  public void TestArrowMethods () throws CGException {
    sentinel.entering(((TestArrowSentinel)sentinel).TestArrowMethods);
    try {
      Arrow arrow = new Arrow(new Integer(2), new Integer(3));
      AssertTrue(Boolean.valueOf(arrow.GetX().intValue() == 2));
      AssertTrue(Boolean.valueOf(arrow.GetY().intValue() == 3));
      arrow.SetX(new Integer(5));
      AssertTrue(Boolean.valueOf(arrow.GetX().intValue() == 5));
      arrow.SetY(new Integer(9));
      AssertTrue(Boolean.valueOf(arrow.GetY().intValue() == 9));
    }
    finally {
      sentinel.leaving(((TestArrowSentinel)sentinel).TestArrowMethods);
    }
  }
// ***** VDMTOOLS END Name=TestArrowMethods

}
;
