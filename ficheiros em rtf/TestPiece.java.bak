//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2013-11-29 by the VDM++ to JAVA Code Generator
// (v9.0.2 - Thu 14-Mar-2013 12:36:47 +0900)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// This file was genereted from "C:\\Users\\Ana Gomes\\Desktop\\ficheiros em rtf\\TestPiece.rtf".

// ***** VDMTOOLS START Name=package KEEP=NO
// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=NO
import jp.vdmtools.VDM.UTIL;
import jp.vdmtools.VDM.Sentinel;
import jp.vdmtools.VDM.EvaluatePP;
import jp.vdmtools.VDM.CGException;
// ***** VDMTOOLS END Name=imports



public class TestPiece implements EvaluatePP {

// ***** VDMTOOLS START Name=sentinel KEEP=NO
  volatile Sentinel sentinel;
// ***** VDMTOOLS END Name=sentinel


// ***** VDMTOOLS START Name=TestPieceSentinel KEEP=NO
  class TestPieceSentinel extends Sentinel {

    public final int AssertTrue = 0;

    public final int TestPieceMethods = 1;

    public final int nr_functions = 2;


    public TestPieceSentinel () throws CGException {}


    public TestPieceSentinel (EvaluatePP instance) throws CGException {
      init(nr_functions, instance);
    }

  }
// ***** VDMTOOLS END Name=TestPieceSentinel
;

// ***** VDMTOOLS START Name=evaluatePP#1|int KEEP=NO
  public Boolean evaluatePP (int fnr) throws CGException {
    return Boolean.TRUE;
  }
// ***** VDMTOOLS END Name=evaluatePP#1|int


// ***** VDMTOOLS START Name=setSentinel KEEP=NO
  public void setSentinel () {
    try {
      sentinel = new TestPieceSentinel(this);
    }
    catch (Exception e) {
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=setSentinel


// ***** VDMTOOLS START Name=vdm_init_TestPiece KEEP=NO
  private void vdm_init_TestPiece () {
    try {
      setSentinel();
    }
    catch (Exception e) {
      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=vdm_init_TestPiece


// ***** VDMTOOLS START Name=TestPiece KEEP=NO
  public TestPiece () throws CGException {
    vdm_init_TestPiece();
  }
// ***** VDMTOOLS END Name=TestPiece


// ***** VDMTOOLS START Name=AssertTrue#1|Boolean KEEP=NO
  public void AssertTrue (final Boolean a) throws CGException {
    sentinel.entering(((TestPieceSentinel)sentinel).AssertTrue);
    try {
      if (!this.pre_AssertTrue(a).booleanValue()) 
        UTIL.RunTime("Precondition failure in AssertTrue");
      return;
    }
    finally {
      sentinel.leaving(((TestPieceSentinel)sentinel).AssertTrue);
    }
  }
// ***** VDMTOOLS END Name=AssertTrue#1|Boolean


// ***** VDMTOOLS START Name=pre_AssertTrue#1|Boolean KEEP=NO
  public Boolean pre_AssertTrue (final Boolean a) throws CGException {
    return a;
  }
// ***** VDMTOOLS END Name=pre_AssertTrue#1|Boolean


// ***** VDMTOOLS START Name=TestPieceMethods KEEP=NO
  public void TestPieceMethods () throws CGException {
    sentinel.entering(((TestPieceSentinel)sentinel).TestPieceMethods);
    try {
      Piece p = new Piece(new Integer(2), new Integer(3));
      AssertTrue(Boolean.valueOf(p.GetX().intValue() == 2));
      AssertTrue(Boolean.valueOf(p.GetY().intValue() == 3));
      p.SetX(new Integer(5));
      AssertTrue(Boolean.valueOf(p.GetX().intValue() == 5));
      p.SetY(new Integer(9));
      AssertTrue(Boolean.valueOf(p.GetY().intValue() == 9));
    }
    finally {
      sentinel.leaving(((TestPieceSentinel)sentinel).TestPieceMethods);
    }
  }
// ***** VDMTOOLS END Name=TestPieceMethods

}
;
